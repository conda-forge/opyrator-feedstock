{% set name = "opyrator" %}
{% set version = "0.0.12" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/opyrator-{{ version }}.tar.gz
  sha256: 38edbbda29065bbf5ac63fa80b8b443ba9bacd0b97c9f261d6e9b85620c1c79d

build:
  number: 1
  noarch: python
  entry_points:
    - opyrator=opyrator._cli:cli
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python {{ python_min }}
    - setuptools
  run:
    - fastapi
    - loguru
    - numpy
    - pandas
    - plotly
    - python >={{ python_min }}
    - streamlit >=0.72
    - typer
    - uvicorn
    # Fix for "pydantic.errors.PydanticImportError: `pydantic:parse_raw_as` has been removed in V2."
    - pydantic <2

test:
  imports:
    - opyrator
    - opyrator.api
  commands:
    - pip check
    - opyrator --help
  requires:
    - pip
    - python {{ python_min }}

about:
  home: https://opyrator-playground.mltooling.org/
  summary: Turn python functions into microservices.
  dev_url: https://github.com/ml-tooling/opyrator
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - thewchan
